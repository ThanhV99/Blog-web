---
import server_url from "@config/serverUrl.json"
import { BiCalendarEdit, BiCategoryAlt } from "react-icons/bi/index.js";
import Share from "@components/Share.astro";
import similerItems from "@lib/utils/similarItems";
import SimilarPosts from "@components/SimilarPosts.astro";
import {fetchPostsList} from "../api/data"
import {fetchCategoriesList} from '../api/categories';
import {fetchFilterCategories} from '../api/data'

const { post } = Astro.props;

const { title, description, date_post, body, categories, author, tags } = post.items[0];
const similarPostsCategory = await fetchFilterCategories("blog.BlogPage", "description,date_post,feed_image,categories(name),author",'-first_published_at', 3, categories[0].id);

// const posts = await fetchPostsList("blog.BlogPage", 'description,date_post,feed_image,categories(name),author', '-first_published_at');
// const similarPosts = similerItems(post, posts, post.slug);

---

<section class="section">
  <div class="container">
    <article class="row justify-center">
      <div class="md:col-10 text-center">
        <!-- <h1 set:html={markdownify(title)} class="h2" /> -->
        <h1>{title}</h1>
        <ul class="mt-4 flex flex-wrap items-center justify-center text-text">
          <li class="mx-3">
            {author}
          </li>
          <li class="mx-3 flex items-center flex-wrap font-medium">
            <BiCalendarEdit className="mr-1 h-5 w-5 text-gray-600" />
            <>{date_post}</>
          </li>
          <li class="mx-3 flex items-center flex-wrap">
            <BiCategoryAlt className="mr-1 h-[18px] w-[18px] text-gray-600" />
            <>
              <ul>
                {categories.map((e: any) => e.name)}
              </ul>
            </>
          </li>
          <li class="mx-3 flex items-center flex-wrap"></li>
        </ul>
      </div>

      <!-- <div class="col-12 mt-8 mb-2">
        {image && (
          <Image
            src={image}
            height={500}
            width={1000}
            alt={title}
            class="rounded-lg"
          />
        )}
      </div> -->

      <div class="md:col-10">
        <div class="content mb-16 text-left">
          <p class="description">{description}</p>
          {
            body.map((e: any) => {
              if (e.type === "content") {
                return <div set:html={e.value} />;
              } else if (e.type === "image") {
                return <div class="fig-picture"><img src={`${server_url.server}${e.value.image_url}`} style="width:100%;margin:0"></div>
                <figcaption itemprop="description" set:html={e.value.caption}></figcaption>;
              }
            })
          }
        </div>
        <div class="flex flex-wrap items-center justify-between">
          <ul class="mr-4 mb-4 space-x-3">
            tags
          </ul>
          <Share
            className="social-share mb-4"
            title={title}
            description={description}
            slug={post.slug}
          />
        </div>
      </div>
    </article>
  </div>
</section>

<!-- similar posts -->
{
  similarPostsCategory.meta.total_count > 0 && (
    <section class="section pt-0">
      <div class="container">
        <h2 class="mb-8 text-center h3">Similar Posts</h2>
        <SimilarPosts posts={similarPostsCategory} />
      </div>
    </section>
  )
}