---
import { Image } from "@astrojs/image/components";
import config from "@config/config.json";
import { getSinglePage } from "@lib/contentParser.astro";
import dateFormat from "@lib/utils/dateFormat";
import { humanize,slugify } from "@lib/utils/textConverter";
import { BiCalendarEdit,BiCategoryAlt } from "react-icons/bi/index.js";
import server_url from "@config/serverUrl.json"


const { summary_length } = config.settings;
const { className, posts, fluid } = Astro.props;

---

<div class={`row gy-5 gx-4 ${className} ${posts.length == 1 ? "justify-center" : ""} `}>
  {
    posts.map((post: any, i: number) => (
      <div class={i === 0 && fluid != false ? "col-12" : "col-12 sm:col-6"}>
        {post.feed_image != null && (
          <a href={`/${post.meta.slug}`} class="rounded-lg block hover:text-primary overflow-hidden group" style={`height: ${i === 0 ? 475 : 230}px;  width=${i === 0 ? 925 : 445}px`}>
            <!--lay image dau tien trong api -->
            <img
              class="group-hover:scale-[1.03] transition duration-300 w-full"
              src={`${server_url.server}${post.feed_image.meta.download_url}`}
              alt={`${post.title}`}
              width={i === 0 ? 925 : 445}
              height={i === 0 ? 475 : 230}
            />
          </a>
        )}
        <ul class="mt-6 mb-4 flex flex-wrap items-center text-text">
          <li class="mr-5">
            {post.author}
          </li>
          <li class="mr-5 flex items-center flex-wrap font-medium">
            <BiCalendarEdit className="mr-1 h-5 w-5 text-gray-600" />
            {post.date_post}
          </li>
          <li class="mr-5 flex items-center flex-wrap">
            <BiCategoryAlt className="mr-1 h-[18px] w-[18px] text-gray-600" />
            {post.categories[0].name}
          </li>
        </ul>
        <h3 class="mb-4">
          <a href={`/${post.meta.slug}`} class="block hover:text-primary transition duration-300">
            {post.title}
          </a>
        </h3>
        <p class="text-text">
          {post.description.slice(0, Number(i === 0 && fluid != false ? summary_length * 2 : summary_length))}...
        </p>
      </div>
    ))
  }
</div>
